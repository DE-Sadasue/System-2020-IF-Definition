openapi: 3.0.2
info:
  version: 0.0.1-SNAPSHOT
  title: 申請書管理システム Swagger APIs

tags:
- name: AppMaster
  description: '申請書定義マスタ'
- name: AppFormItem
  description: '申請書入力項目'
- name: GetUser
  description: 'ユーザー一覧を取得する'
- name: GetApp
  description: '申請書詳細取得'
- name: CreateApp
  description: '申請書登録API'
- name: UpdateApp
  description: '申請書編集API'
- name: SearchApp
  description: '申請書参照API'
- name: UpdateAppStatus
  description: '申請書の状態変更API'
- name: Batch
  description: 'バッチ処理API'
- name: CreateUser
  description: 'ユーザーを作成する'

paths:
  # IF-APP-0001 申請書種類取得API
  '/mst/appDefines':
    get:
      tags:
        - AppMaster
      summary: '申請書種類一覧取得API <IF-APP-0001>'
      description: >-
        申請書定義マスタから申請書種類一覧を取得<br>
        ※表示フラグが「1」のみ対象
      security:
        - BearerAuth: []
      parameters:
        - in: header
          name: authorization
          schema:
            type: string
          required: true
          description: 'Authorizationヘッダ'
          example: 'Bearer [ID Token]'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppDefineListResponse'
        '400':
          description: '不正リクエスト'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: >-
            認証失敗
            <br>
            ※bodyは400と同様
        '500':
          description: >-
            サーバ内部異常
            <br>
            ※bodyは400と同様

  # IF-APP-0002 申請書の入力項目を取得API
  '/mst/appFormItems/{app_de_id}':
    get:
      tags:
        - AppFormItem
      summary: '申請書の入力項目を取得API <IF-APP-0002>'
      description: >-
        項目定義マスタから申請書の入力項目を取得
      security:
        - BearerAuth: []
      parameters:
        - in: header
          name: authorization
          schema:
            type: string
          required: true
          description: 'Authorizationヘッダ'
          example: 'Bearer [ID Token]'
        - in: path
          name: app_de_id
          schema:
            type: number
          required: true
          description: '申請書定義ID'
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppFormItemListResponse'
        '400':
          description: '不正リクエスト'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: >-
            認証失敗
            <br>
            ※bodyは400と同様
        '500':
          description: >-
            サーバ内部異常
            <br>
            ※bodyは400と同様

  # IF-APP-0003 ユーザー一覧取得
  '/mst/users':
    get:
      tags:
        - GetUser
      summary: 'ユーザー一覧を取得するAPI <IF-APP-0003>'
      description: >-
        部署別のユーザ情報を取得する。
      security:
        - BearerAuth: []
      parameters:
        - in: header
          name: authorization
          schema:
            type: string
          required: true
          description: 'Authorizationヘッダ'
          example: 'Bearer [ID Token]'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usersResponse'
        '400':
          description: '不正リクエスト'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: >-
            認証失敗
            <br>
            ※bodyは400と同様
        '500':
          description: >-
            サーバ内部異常
            <br>
            ※bodyは400と同様
   # IF-APP-0009 ユーザー登録API
    post:
      tags:
        - CreateUser
      summary: 'ユーザー登録API <IF-APP-0009>'
      description: >-
        ユーザーの新規登録
      security:
        - BearerAuth: []
      parameters:
        - in: header
          name: authorization
          schema:
            type: string
          required: true
          description: 'Authorizationヘッダ'
          example: 'Bearer [ID Token]'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postUserRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: '不正リクエスト'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: >-
            認証失敗
            <br>
            ※bodyは400と同様
        '500':
          description: >-
            サーバ内部異常
            <br>
            ※bodyは400と同様

  # IF-APP-0004 申請書詳細取得
  '/apps/{app_id}':
    get:
      tags:
        - GetApp
      summary: '申請書詳細取得 <IF-APP-0004>'
      description: >-
        申請書の詳細情報を取得する。
      security:
        - BearerAuth: []
      parameters:
        - in: header
          name: authorization
          schema:
            type: string
          required: false
          description: 'Authorizationヘッダ'
          example: 'Bearer [ID Token]'
        - in: query
          name: app_id
          schema:
            type: number
          required: true
          description: '申請書ID'
          example: 1001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appDetailResponse'
        '400':
          description: '不正リクエスト'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: >-
            認証失敗
            <br>
            ※bodyは400と同様
        '500':
          description: >-
            サーバ内部異常
            <br>
            ※bodyは400と同様
    # IF-APP-0006 申請書編集API
    put:
      tags:
        - UpdateApp
      summary: '申請書編集API <IF-APP-0006>'
      description: >-
        申請書の編集
      security:
        - BearerAuth: []
      parameters:
        - in: header
          name: authorization
          schema:
            type: string
          required: true
          description: 'Authorizationヘッダ'
          example: 'Bearer [ID Token]'
        - in: path
          name: app_id
          schema:
            type: number
          required: true
          description: '申請書ID'
          example: 1001
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putAppRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: '不正リクエスト'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: >-
            認証失敗
            <br>
            ※bodyは400と同様
        '500':
          description: >-
            サーバ内部異常
            <br>
            ※bodyは400と同様

  '/apps':
    # IF-APP-0005 申請書登録API
    post:
      tags:
        - CreateApp
      summary: '申請書登録API <IF-APP-0005>'
      description: >-
        申請書の新規登録
      security:
        - BearerAuth: []
      parameters:
        - in: header
          name: authorization
          schema:
            type: string
          required: true
          description: 'Authorizationヘッダ'
          example: 'Bearer [ID Token]'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postAppRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: '不正リクエスト'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: >-
            認証失敗
            <br>
            ※bodyは400と同様
        '500':
          description: >-
            サーバ内部異常
            <br>
            ※bodyは400と同様

  # IF-APP-0007 申請書一覧取得API
    get:
      tags:
        - SearchApp
      summary: '申請書一覧取得API <IF-APP-0007>'
      description: >-
        申請された申請書の一覧を取得
      security:
        - BearerAuth: []
      parameters:
        - in: header
          name: authorization
          schema:
            type: string
          required: true
          description: 'Authorizationヘッダ'
          example: 'Bearer [ID Token]'
        - in: query
          name: start
          schema:
            type: number
          required: false
          description: '取得データの開始位置'
          example: 1
        - in: query
          name: number
          schema:
            type: number
          required: false
          description: '取得データの件数'
          example: 10
        - in: query
          name: request_type
          schema:
            type: number
          required: false
          description: 'リクエスト区分 (1:申請中, 2:承認依頼, 3:作業依頼, 4:否認)'
          example: 1
        - in: query
          name: job_id
          schema:
            type: number
          required: false
          description: '部署ID'
          example: 1
        - in: query
          name: user_id
          schema:
            type: number
          required: false
          description: 'ユーザID'
          example: 1
        - in: query
          name: date_from
          schema:
            type: string
          required: false
          description: '期間From'
          example: "20201001"
        - in: query
          name: date_to
          schema:
            type: string
          required: false
          description: '期間To'
          example: "20201031"
        - in: query
          name: app_status
          schema:
            type: number
          required: false
          description: 'ステータス (1:確認中, 2:否認, 3:作業中, 4:作業完了)'
          example: 1
        - in: query
          name: app_de
          schema:
            type: string
          required: false
          description: '申請書定義ID（カンマ区切り）'
          example: "1,2"
        - in: query
          name: display_order
          schema:
            type: string
          required: false
          description: |-
            ソート<br>
            ※<br>
            日付昇順：DATE_ASC,<br>
            日付降順：DATE_DESC,<br>
            申請書昇順：FORM_ASC,<br>
            申請書降順：FORM_DESC,<br>
            スタッフ昇順：STAFF_ASC,<br>
            スタッフ降順：STAFF_DESC,<br>
            ステータス昇順：STATUS_ASC,<br>
            ステータス降順：STATUS_DESC
          example: "DATE_ASC"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appListResponse'
        '400':
          description: '不正リクエスト'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: >-
            認証失敗
            <br>
            ※bodyは400と同様
        '500':
          description: >-
            サーバ内部異常
            <br>
            ※bodyは400と同様

  '/apps/{app_id}/status':
    # IF-APP-0008 申請書の状態変更API
    put:
      tags:
        - UpdateAppStatus
      summary: '申請書の状態変更API <IF-APP-0008>'
      description: >-
        申請書の状態変更
      security:
        - BearerAuth: []
      parameters:
        - in: header
          name: authorization
          schema:
            type: string
          required: true
          description: 'Authorizationヘッダ'
          example: 'Bearer [ID Token]'
        - in: path
          name: app_id
          schema:
            type: number
          required: true
          description: '申請書ID'
          example: 1001
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putAppStatusRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: '不正リクエスト'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: >-
            認証失敗
            <br>
            ※bodyは400と同様
        '500':
          description: >-
            サーバ内部異常
            <br>
            ※bodyは400と同様

  # IF-BAT-0001 申請期限通知
  '/notify/deadline':
    put:
      tags:
        - Batch
      summary: '申請期限通知 <IF-BAT-0001>'
      description: >-
        期限が近づいている申請の通知を行う。
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: 'サーバ内部異常'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'

components:
  schemas:
    ApiResponse:
      description: >-
        汎用APIレスポンスオブジェクト。
        処理結果を返す。
      type: object
      properties:
        result:
          description: '処理結果。0：正常終了、1：異常終了'
          type: number
    errorResponse:
      description: >-
        汎用APIエラーレスポンスオブジェクト。
      type: object
      properties:
        error:
          description: 'エラーリスト'
          type: array
          items:
            type: object
            properties:
              code:
                description: 'エラーコード'
                type: string
                example: 'MG-XXXXX'
              message:
                description: '該当のメッセージを設定(※メッセージをフロントで管理する場合は空) '
                type: string
                example: 'エラーメッセージ'
              result:
                description: '処理結果'
                type: boolean
                example: false
              detail:
                description: 'エラー詳細'
                type: string
                example: 'エラー詳細メッセージ'
    getAppDefineListResponse:
      description: '申請書種類一覧を取得レスポンス'
      type: object
      properties:
        app_define_list:
          description: '申請書種類一覧'
          type: array
          items:
            type: object
            properties:
              app_de_id:
                description: '申請書定義ID'
                type: number
                example: 1
              app_name:
                description: '申請書名称'
                type: string
                example: '勤怠申請（有給休暇）'
              app_type:
                description: '種別 (1：承認のみ 2：承認＆作業)'
                type: number
                example: 1
              app_deadline_flg:
                description: '期限フラグ (0：なし1：あり)'
                type: number
                example: 0
              mail_list:
                description: 'メールアドレスリスト'
                type: array
                items:
                  type: object
                  properties:
                    mail:
                      description: 'メールアドレス'
                      type: string
                      example: 'management@defide-ix.com'
              description:
                description: '説明欄'
                type: string
                example: '勤怠申請（有給休暇）の説明'

    getAppFormItemListResponse:
      description: '申請書の入力項目を取得レスポンス'
      type: object
      properties:
        form_item_list:
          description: '申請書の入力項目リスト'
          type: array
          items:
            type: object
            properties:
              item_id:
                description: '項目定義ID'
                type: number
              item_name:
                description: '項目名称'
                type: string
              item_input_type:
                description: >-
                  入力タイプ<br>
                  1：text<br>
                  2：textarea<br>
                  3：radio<br>
                  4：checkbox<br>
                  5：select<br>
                  6：datetime<br>
                  7：date<br>
                  8：time<br>
                  9：month<br>
                  10：week<br>
                  11：email<br>
                  99：label
                type: number
              item_type:
                description: '種別 (1：単一項目 2：反復項目)'
                type: number
              seq_no:
                description: '項目 Seq No'
                type: number
              item_required_flg:
                description: '項目必須フラグ (0：任意 1：必須)'
                type: number
              item_choice_id_list:
                description: '項目選択肢リスト'
                type: array
                items:
                  type: object
                  properties:
                    item_choice_id:
                      description: '項目選択肢定義ID'
                      type: number
                    item_choice_name:
                      description: '選択肢名称'
                      type: string
                    item_choice_seq_no:
                      description: '項目選択肢Seq No'
                      type: number
              child_item_list:
                description: >-
                  子項目リスト
                type: array
                items:
                  type: object
                  properties:
                    item_id:
                      description: '項目定義ID'
                      type: number
                    item_name:
                      description: '項目名称'
                      type: string
                    item_input_type:
                      description: '入力タイプ'
                      type: number
                    seq_no:
                      description: '項目 Seq No'
                      type: number
                    item_required_flg:
                      description: '項目必須フラグ'
                      type: number
                    item_choice_id_list:
                      description: '項目選択肢リスト'
                      type: array
                      items:
                        type: object
                        properties:
                          item_choice_id:
                            description: '項目選択肢定義ID'
                            type: number
                          item_choice_name:
                            description: '選択肢名称'
                            type: string
                          item_choice_seq_no:
                            description: '項目選択肢Seq No'
                            type: number
      example: 
        {
          "form_item_list": [
            {
              "item_id": 1,
              "item_name": "期間（From）",
              "item_input_type": 7,
              "item_type": 1,
              "seq_no": 1,
              "item_required_flg": 1,
              "item_choice_id_list": [
              ],
              "child_item_list": [
              ]
            },
            {
              "item_id": 2,
              "item_name": "期間（To）",
              "item_input_type": 7,
              "item_type": 1,
              "seq_no": 2,
              "item_required_flg": 0,
              "item_choice_id_list": [
              ],
              "child_item_list": [
              ]
            },
            {
              "item_id": 3,
              "item_name": "種別",
              "item_input_type": 3,
              "item_type": 1,
              "seq_no": 3,
              "item_required_flg": 0,
              "item_choice_id_list": [
                {
                  "item_choice_id": 1,
                  "item_choice_name": "全休",
                  "item_choice_seq_no": 1
                },
                {
                  "item_choice_id": 2,
                  "item_choice_name": "午前休",
                  "item_choice_seq_no": 2
                },
                {
                  "item_choice_id": 3,
                  "item_choice_name": "午後休",
                  "item_choice_seq_no": 3
                }
              ],
              "child_item_list": [
              ]
            },
            {
              "item_id": 4,
              "item_name": "休暇日数",
              "item_input_type": 1,
              "item_type": 1,
              "seq_no": 4,
              "item_required_flg": 0,
              "item_choice_id_list": [
              ],
              "child_item_list": [
              ]
            },
            {
              "item_id": 5,
              "item_name": "理由",
              "item_input_type": 2,
              "item_type": 1,
              "seq_no": 5,
              "item_required_flg": 1,
              "item_choice_id_list": [
              ],
              "child_item_list": [
              ]
            }
          ]
        }
    postAppRequest:
      description: '申請書登録リクエスト'
      type: object
      properties:
        app_de_id:
          description: '申請書定義ID'
          type: number
          example: 1111
        res_person_id:
          description: '担当者ID'
          type: number
          example: 101
        item_list:
          description: '項目入力値リスト'
          type: array
          items:
            type: object
            properties:
              item_id:
                description: '項目定義ID'
                type: number
                example: 10
              input_value:
                description: '入力値 / childItemListがnullの場合は必須'
                type: string
                example: 'value'
              child_item_list:
                description: >-
                  子項目入力値リスト
                type: array
                items:
                  type: object
                  properties:
                    item:
                      description: >-
                        子項目グループ
                      type: array
                      items:
                        type: object
                        properties:
                          item_id:
                            description: '項目定義ID'
                            type: number
                            example: 10
                          input_value:
                            description: '入力値'
                            type: string
                            example: 'value'
                        required:
                          - 'item_id'
                          - 'input_value'
            required:
              - 'item_id'
      required:
        - 'app_de_id'
        - 'res_person_id'
    putAppRequest:
      description: '申請書編集リクエスト'
      type: object
      properties:
        res_person_id:
          description: '担当者ID'
          type: number
          example: 101
        item_list:
          description: '項目入力値リスト'
          type: array
          items:
            type: object
            properties:
              item_id:
                description: '項目定義ID'
                type: number
                example: 10
              input_value:
                description: '入力値 / childItemListがnullの場合は必須'
                type: string
                example: 'value'
              child_item_list:
                description: >-
                  子項目入力値リスト
                type: array
                items:
                  type: object
                  properties:
                    item:
                      description: >-
                        子項目グループ
                      type: array
                      items:
                        type: object
                        properties:
                          item_id:
                            description: '項目定義ID'
                            type: number
                            example: 10
                          input_value:
                            description: '入力値'
                            type: string
                            example: 'value'
                        required:
                          - 'item_id'
                          - 'input_value'
            required:
              - 'item_id'
      required:
        - 'app_id'
        - 'res_person_id'
    putAppStatusRequest:
      description: '申請書の状態変更リクエスト'
      type: object
      properties:
        app_operation:
          description: >-
            申請書の操作<br>
            　否認：3 <br>
            　承認：4 <br>
            　作業完了：5 <br>
          type: number
          example: 4
        res_person_id:
          description: >-
            担当者ID<br>
            　否認時：不要<br>
            　承認時：次の担当者を設定。最終承認者の場合不要<br>
            　作業完了時：不要<br>

          type: number
          example: 101
        reason:
          description: >-
            理由<br>
            　否認時のみ必須<br>
          type: string
          example: '否認時のみ否認理由コメント'
      required:
        - 'app_operation'
    appListResponse:
      description: '申請書一覧取得レスポンス'
      type: object
      properties:
        app_list:
          description: '申請書一覧'
          type: array
          items:
            type: object
            properties:
              app_id:
                description: '申請書ID'
                type: number
                example: 1
              app_de_id:
                description: '申請書定義ID'
                type: number
                example: 1
              app_name:
                description: '申請書名'
                type: string
                example: "勤怠申請（有給休暇）"
              app_status:
                description: 'ステータス (1:確認中, 2:否認, 3:作業中, 4:作業完了)'
                type: number
                example: 1
              res_person_id:
                description: '担当者ID'
                type: number
                example: 98
              res_person_name:
                description: '担当者名'
                type: string
                example: "デフィデ 次郎"
              res_person_job_id:
                description: '担当者部署ID'
                type: number
                example: 1
              res_person_job_name:
                description: '担当者部署名'
                type: string
                example: "経営管理部"
              applicant_id:
                description: '申請者ID'
                type: number
                example: 99
              applicant_name:
                description: '申請者名'
                type: string
                example: "デフィデ 太郎"
              applicant_job_id:
                description: '申請者部署ID'
                type: number
                example: 2
              applicant_job_name:
                description: '申請者部署名'
                type: string
                example: "営業企画部"
              app_request_at:
                description: '申請日時'
                type: string
                example: "2020-10-01 12:00:00"
              reason:
                description: '理由'
                type: string
                example: "私事都合"
              deadline:
                description: '期日'
                type: string
                example: "2020-10-07 23:59:59"
    usersResponse:
      description: 'ユーザー一覧取得レスポンス'
      type: object
      properties:
        job_list:
          description: '部署リスト'
          type: array
          items:
            type: object
            properties:
              job_id:
                description: '部署ID'
                type: number
                example: 201
              job_name:
                description: '部署名称'
                type: string
                example: "システム開発部"
              user_list:
                description: 'ユーザリスト'
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      description:  'ユーザID'
                      type: number
                      example: 101
                    user_name:
                      description:  'ユーザ名前'
                      type: string
                      example: "デフィデ　太郎"
                  required:
                    - 'user_id'
                    - 'user_name'
            required:
              - 'job_id'
              - 'job_name'
              - 'user_list'
    appDetailResponse:
      description: '申請書詳細取得レスポンス'
      type: object
      properties:
        app_request_date:
          description: '申請日時 【形式】YYYY/MM/DD'
          type: string
          example: '2020/01/01'
        app_user_name:
          description: '申請者名'
          type: string
          example: 'デフィデ　太郎'
        app_user_job:
          description: '申請者所属部署名'
          type: string
          example: 'システム開発部'
        status:
          description: 'ステータス 1：確認中 2：否認 3：作業中 4：申請完了'
          type: number
          example: 1
        reason:
          description: '理由'
          type: string
          example: '申請'
        app:
          type: object
          properties:
            item_list:
              description: '項目入力値リスト'
              type: array
              items:
                type: object
                properties:
                  item_id:
                    description: '項目定義ID'
                    type: number
                    example: 1
                  input_value:
                    description: '入力値'
                    type: string
                    example: '20201201'
                  child_item_list:
                    description: >-
                      子項目リスト
                    type: array
                    items:
                      type: object
                      properties:
                        item:
                          description: >-
                            子項目グループ
                          type: array
                          items:
                            type: object
                            properties:
                              item_id:
                                description: '項目定義ID'
                                type: number
                                example: 10
                              input_value:
                                description: '入力値'
                                type: string
                                example: '3'
                            required:
                              - 'item_id'
                              - 'input_value'
                required:
                  - 'item_id'
                  - 'input_value'
        app_history_list:
          description: '申請履歴リスト'
          type: array
          items:
            description: '申請履歴'
            type: object
            properties:
              update_time:
                description: '更新日 【形式】YYYY/MM/DD HH:MM'
                type: string
                example: '2020/01/01 12:00'
              update_user_name:
                description: '更新者名'
                type: string
                example: 'デフィデ　役員'
              history_status:
                description: '申請履歴のステータス 1：確認中 2：否認 3：作業中 4：確認完了'
                type: number
                example: 1
              history_reason:
                description: '申請履歴の理由'
                type: string
                example: '申請'
            required:
              - 'update_time'
              - 'update_user_name'
              - 'history_status'
      required:
        - 'app_request_date'
        - 'app_user_name'
        - 'app_user_job'
        - 'status'
        - 'app'
        - 'app_history_list'
    postUserRequest:
      description: 'ユーザー登録リクエスト'
      type: object
      properties:
        access_token:
          description: 'アクセストークン'
          type: string
          example: 'eyJ0eXAiOiJKV1QiLCJub25jZSI6Ii02WVAzY...'
      required:
        - 'access_token'        
